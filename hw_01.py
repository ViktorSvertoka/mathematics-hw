# -*- coding: utf-8 -*-
"""–î–ó1_–°–≤–µ—Ä—Ç–æ–∫–∞_–í—ñ–∫—Ç–æ—Ä_–í–∞—Å–∏–ª—å–æ–≤–∏—á.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bQAG1nQO2covXASkvZJY13_LYQAodqB4

# –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø–æ Markdown

–ù–∞–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –≤
[Markdown](https://colab.research.google.com/notebooks/markdown_guide.ipynb) (LaTeX):

Markdown | Preview
--- | ---
`**bold text**` | **bold text**
 \\$\frac{x}{y}\\$ | $\frac{x}{y}$
 \\$p^{x}_{y}\\$ | $p^{x}_{y}$
\\$x \cdot y\\$ | $x \cdot y$
\\$\sqrt{x}\\$ | $\sqrt{x}$
\\$\pi\\$ | $\pi$
\\$\approx\\$ | $\approx$

–Ü —â–µ –¥–µ–∫—ñ–ª—å–∫–∞ –ø—Ä–∏–∫–ª–∞–¥—ñ–≤:

```markdown
$y=x^2$

$e^{i\pi} + 1 = 0$

$e^x=\sum_{i=0}^\infty \frac{1}{i!}x^i$

$\frac{n!}{k!(n-k)!} = {n \choose k}$

$A_{m,n} =
 \begin{pmatrix}
  a_{1,1} & a_{1,2} & \cdots & a_{1,n} \\
  a_{2,1} & a_{2,2} & \cdots & a_{2,n} \\
  \vdots  & \vdots  & \ddots & \vdots  \\
  a_{m,1} & a_{m,2} & \cdots & a_{m,n}
 \end{pmatrix}$

 $$
 I =
 \left (\begin{array}{cc}
 1 & 0\\
 0 & 1
 \end{array}\right)
 $$
```

$y=x^2$

$e^{i\pi} + 1 = 0$

$e^x=\sum_{i=0}^\infty \frac{1}{i!}x^i$

$\frac{n!}{k!(n-k)!} = {n \choose k}$

$A_{m,n} =
 \begin{pmatrix}
  a_{1,1} & a_{1,2} & \cdots & a_{1,n} \\
  a_{2,1} & a_{2,2} & \cdots & a_{2,n} \\
  \vdots  & \vdots  & \ddots & \vdots  \\
  a_{m,1} & a_{m,2} & \cdots & a_{m,n}
 \end{pmatrix}$

$I =
\left (\begin{array}{cc}
1 & 0\\
0 & 1
\end{array}\right)$
 ---

# –ó–∞–≤–¥–∞–Ω–Ω—è 1.
–í —à–∞–±–ª–æ–Ω—ñ –Ω–∞–≤–µ–¥–µ–Ω—ñ —á–∏—Å–ª–æ–≤—ñ –≤–µ–∫—Ç–æ—Ä–∏ $\overline{a}$ —Ç–∞ $\overline{b}$. –ü–æ—Ä–∞—Ö—É–π –Ω–∞—Å—Ç—É–ø–Ω–µ:
- —Å—É–º–∞ $\overline{a}$ —Ç–∞ $\overline{b}$
- —Ä—ñ–∑–Ω–∏—Ü—è $\overline{a}$ —Ç–∞ $\overline{b}$
- —Å—É–º–∞ $\overline{a}$ —Ç–∞ $\overline{b}^T$. –ü–æ—è—Å–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
- –º–∞—Ç—Ä–∏—á–Ω–∏–π –¥–æ–±—É—Ç–æ–∫ (dot product) $\overline{a}$ —Ç–∞ $\overline{b}^T$.
- –º–∞—Ç—Ä–∏—á–Ω–∏–π –¥–æ–±—É—Ç–æ–∫ (dot product) $\overline{a}$ —Ç–∞ $\overline{b}$. –ü–æ—è—Å–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
- –¥–æ–±—É—Ç–æ–∫ –ê–¥–∞–º–∞—Ä–∞ (Hadamard product) $\overline{a}$ —Ç–∞ $\overline{b}$. –ü–æ—è—Å–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
- –¥—ñ–ª–µ–Ω–Ω—è $\overline{a}$ —Ç–∞ $\overline{b}$. –ü–æ—è—Å–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
- –¥—ñ–ª–µ–Ω–Ω—è $\overline{a}$ —Ç–∞ $\overline{b}^T$. –ü–æ—è—Å–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
"""

import numpy as np
a = np.array([[1, 2, 3, 4, 5]])
b = np.array([[1/2, 1, 2, 3, 4]])

res = a + b
print(res)

res = a - b
print(res)

res = a * b
print(res)

res = a / b
print(res)

# –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –ú–∏ –º–∞—î–º–æ –¥–≤–∞ –≤–µ–∫—Ç–æ—Ä–∏: a (—Ä–æ–∑–º—ñ—Ä–æ–º 1x5) —Ç–∞ b (—Ä–æ–∑–º—ñ—Ä–æ–º 1x5). –¢—Ä–∞–Ω—Å–ø–æ–Ω—É–≤–∞–Ω–Ω—è –≤–µ–∫—Ç–æ—Ä–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –≤ –≤–µ–∫—Ç–æ—Ä-—Å—Ç–æ–≤–ø–µ—Ü—å ùëèùëá (—Ä–æ–∑–º—ñ—Ä–æ–º 5x1). –ê –ø–æ—Ç—ñ–º –≤–∏–∫–æ–Ω—É—î–º–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è.
b_T = b.T
res = a + b_T
print(res)

b_T = b.T
res = np.dot(a, b_T)
print(res)

# –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –í–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞, —â–æ–± –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ —Ü–µ, –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ç—Ä–∞–Ω—Å–ø–æ–Ω—É–≤–∞—Ç–∏ –æ–¥–∏–Ω –∑ –≤–µ–∫—Ç–æ—Ä—ñ–≤. –£ –¥–∞–Ω–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ç—Ä–∞–Ω—Å–ø–æ–Ω—É—î–º–æ –≤–µ–∫—Ç–æ—Ä ùëè
res = np.dot(a, b)
print(res)

# –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –î–æ–±—É—Ç–æ–∫ –ê–¥–∞–º–∞—Ä–∞ (Hadamard product) ‚Äì —Ü–µ –µ–ª–µ–º–µ–Ω—Ç–Ω–∏–π –¥–æ–±—É—Ç–æ–∫ –¥–≤–æ—Ö –º–∞—Ç—Ä–∏—Ü—å –æ–¥–Ω–∞–∫–æ–≤–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É. –¶–µ –æ–ø–µ—Ä–∞—Ü—ñ—è, –∫–æ–ª–∏ –∫–æ–∂–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤–µ–∫—Ç–æ—Ä—ñ–≤ –º–Ω–æ–∂–∞—Ç—å—Å—è –æ–¥–∏–Ω –Ω–∞ –æ–¥–Ω–æ–≥–æ.
res = a * b
print(res)

# –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –ö–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –≤–µ–∫—Ç–æ—Ä–∞ a –±—É–≤ –ø–æ–¥—ñ–ª–µ–Ω–∏–π –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –≤–µ–∫—Ç–æ—Ä–∞ b.
res = a / b
print(res)

# –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –ú–∏ –º–∞—î–º–æ –¥–≤–∞ –≤–µ–∫—Ç–æ—Ä–∏: a (—Ä–æ–∑–º—ñ—Ä–æ–º 1x5) —Ç–∞ b (—Ä–æ–∑–º—ñ—Ä–æ–º 1x5). –¢—Ä–∞–Ω—Å–ø–æ–Ω—É–≤–∞–Ω–Ω—è –≤–µ–∫—Ç–æ—Ä–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –≤ –≤–µ–∫—Ç–æ—Ä-—Å—Ç–æ–≤–ø–µ—Ü—å ùëèùëá (—Ä–æ–∑–º—ñ—Ä–æ–º 5x1). –ê –ø–æ—Ç—ñ–º –≤–∏–∫–æ–Ω—É—î–º–æ –¥—ñ–ª–µ–Ω–Ω—è.
b_T = b.T
res = a / b_T
print(res)

"""# –ó–∞–≤–¥–∞–Ω–Ω—è 2
–í —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–∏ –Ω–∞–≤—á–∏—à—Å—è –ø–µ—Ä–µ—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∞—Ñ—ñ–Ω–Ω–∏—Ö –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω—å.  
–î–∞–Ω–æ –≤–µ–∫—Ç–æ—Ä:
$$
x =
\left(\begin{array}{cc}
2\\
1
\end{array}\right)
$$


–í–∏–∫–æ–Ω–∞–π –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–¥–∞–≤—à–∏ –º–∞—Ç—Ä–∏—Ü—é –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∑–∞—Å—Ç–æ—Å—É–π —ó—ó –¥–æ –≤–µ–∫—Ç–æ—Ä–∞ $x$:

1. –ó–º–µ–Ω—à–∏ –≤–µ–∫—Ç–æ—Ä $x$ –≤ 2 —Ä–∞–∑–∏ –ø–æ –≤—ñ—Å—ñ $OX$ —Ç–∞ –∑–±—ñ–ª—å—à –≤ 3 —Ä–∞–∑–∏ –ø–æ –≤—ñ—Å—ñ $OY$.
2. –í—ñ–¥–æ–±—Ä–∞–∑–∏ –≤–µ–∫—Ç–æ—Ä $x$ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ—á–∞—Ç–∫—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.
3. –ü–µ—Ä–µ–Ω–µ—Å–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ -3 –ø–æ –≤—ñ—Å—ñ $OX$ —Ç–∞ –Ω–∞ 1 –ø–æ –≤—ñ—Å—ñ $OY$.
4. –ó–º—ñ—Å—Ç–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ 60¬∞ –ø–æ –≤—ñ—Å—ñ $OY$.
5. –ü–æ–≤–µ—Ä–Ω–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ 30¬∞.
6. –û–±'—î–¥–Ω–∞–π –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ –∫—Ä–æ–∫—ñ–≤ 1, 2, 4, 5 –≤ –æ–¥–Ω—É –º–∞—Ç—Ä–∏—Ü—é —Ç–∞ –∑–∞—Å—Ç–æ—Å—É–π —ó—ó –¥–æ –≤–µ–∫—Ç–æ—Ä—É $x$.

#### 2.1 –ó–º–µ–Ω—à–∏ –≤–µ–∫—Ç–æ—Ä  $x$  –≤ 2 —Ä–∞–∑–∏ –ø–æ –≤—ñ—Å—ñ  OX  —Ç–∞ –∑–±—ñ–ª—å—à –≤ 3 —Ä–∞–∑–∏ –ø–æ –≤—ñ—Å—ñ  OY .

$$
M_1 =
\left (\begin{array}{cc}
\frac{1}{2} & 0\\
0 & 3
\end{array}\right)
$$

$$
M_1x =
\left (\begin{array}{cc}
\frac{1}{2} & 0\\
0 & 3
\end{array}\right)
\left (\begin{array}{cc}
2\\
1
\end{array}\right)=
\left(\begin{array}{cc}
\frac{1}{2} \cdot 2 + 0 \cdot 1\\
0 \cdot 2 + 3 \cdot 1
\end{array}\right)=
\left(\begin{array}{cc}
1+0\\
0+3
\end{array}\right) =
\left (\begin{array}{cc}
1\\
3
\end{array}\right)
$$

#### 2.2 –í—ñ–¥–æ–±—Ä–∞–∑–∏ –≤–µ–∫—Ç–æ—Ä $x$ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ—á–∞—Ç–∫—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.

$$
M_2 =
\left (\begin{array}{cc}
-1 & 0\\
0 & -1
\end{array}\right)
\\
M_2x =
\left (\begin{array}{cc}
-1 & 0\\
0 & -1
\end{array}\right)
\left (\begin{array}{cc}
2\\
1
\end{array}\right)=
\left(\begin{array}{cc}
-1 \cdot 2 + 0 \cdot 1\\
0 \cdot 2 + 1 \cdot -1
\end{array}\right) =
\left (\begin{array}{cc}
-2\\
-1
\end{array}\right)
$$

#### 2.3 –ü–µ—Ä–µ–Ω–µ—Å–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ -3 –ø–æ –≤—ñ—Å—ñ $OX$ —Ç–∞ –Ω–∞ 1 –ø–æ –≤—ñ—Å—ñ $OY$.

$$
M_3 =
\left (\begin{array}{cc}
1 & 0 & -3\\
0 & 1 & 1\\
0 & 0 & 1
\end{array}\right)\\
x=
\left (\begin{array}{cc}
2\\
1\\
1
\end{array}\right)
\\
M_3x =
\left (\begin{array}{cc}
1 & 0 & -3\\
0 & 1 & 1\\
0 & 0 & 1
\end{array}\right)\cdot
\left (\begin{array}{cc}
1 \cdot 2 + 0 \cdot 1 + (-3) \cdot 1\\
0 \cdot 2 + 1 \cdot 1 + 1 \cdot 1\\
0 \cdot 2 + 0 \cdot 1 + 1 \cdot 1
\end{array}\right)=
\left (\begin{array}{cc}
-1\\
2\\
1
\end{array}\right)\\
\\
$$

#### 2.4 –ó–º—ñ—Å—Ç–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ 60¬∞ –ø–æ –≤—ñ—Å—ñ $OY$.

$$
M_4 =
\left (\begin{array}{cc}
1 & 0\\
tan(Œ∏) & 1
\end{array}\right)=
\left (\begin{array}{cc}
1 & 0\\
tan\frac{\pi}{3} & 1
\end{array}\right)=
\left (\begin{array}{cc}
1 & 0\\
\sqrt{3} & 1
\end{array}\right)
\\
M_4x =
\left (\begin{array}{cc}
1 & 0\\
\sqrt{3} & 1
\end{array}\right)\cdot
\left (\begin{array}{cc}
2\\
1
\end{array}\right)=
\left (\begin{array}{cc}
1 \cdot 2 + 0 \cdot 1\\
\sqrt{3} \cdot 2 + 1 \cdot 1
\end{array}\right)=
\left (\begin{array}{cc}
2\\
2\sqrt{3} + 1
\end{array}\right)
$$
"""



"""#### 2.5 –ü–æ–≤–µ—Ä–Ω–∏ –≤–µ–∫—Ç–æ—Ä $x$ –Ω–∞ 30¬∞.

$$
M_5 = \begin{bmatrix} \cos\left(\frac{\pi}{6}\right) & -\sin\left(\frac{\pi}{6}\right) \\ \sin\left(\frac{\pi}{6}\right) & \cos\left(\frac{\pi}{6}\right) \end{bmatrix}
\\
\\
M_5x = \begin{pmatrix} \frac{\sqrt{3}}{2} \times 2 + (-\frac{1}{2}) \times 1 \\ \frac{1}{2} \times 2 + \frac{\sqrt{3}}{2} \times 1 \end{pmatrix} =
\begin{pmatrix} \sqrt{3} - \frac{1}{2} \\ 1 + \frac{\sqrt{3}}{2} \end{pmatrix}
$$

#### 2.6 –û–±'—î–¥–Ω–∞–π –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ –∫—Ä–æ–∫—ñ–≤ 1, 2, 4, 5 –≤ –æ–¥–Ω—É –º–∞—Ç—Ä–∏—Ü—é —Ç–∞ –∑–∞—Å—Ç–æ—Å—É–π —ó—ó –¥–æ –≤–µ–∫—Ç–æ—Ä—É $x$.

$$
M_6 = M_5 \cdot M_4 \cdot M_2 \cdot M_1 = ?
$$

$$
M_6 =
\begin{pmatrix} \sqrt{3} - \frac{1}{2} \\ 1 + \frac{\sqrt{3}}{2} \end{pmatrix} ‚ãÖ
\begin{pmatrix} 1 - \frac{\sqrt{3}}{2} \\ \sqrt{3} + \frac{1}{2} \end{pmatrix} ‚ãÖ
\left (\begin{array}{cc}
-2\\
-1
\end{array}\right) ‚ãÖ
\left (\begin{array}{cc}
1\\
3
\end{array}\right)
\\
M_6 = 2\sqrt{3} - \frac{7}{2}
$$
"""



"""# –ó–∞–≤–¥–∞–Ω–Ω—è 2 (–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ)"""

import cv2 as cv
import urllib.request
import numpy as np
from google.colab.patches import cv2_imshow as cv_imshow
from PIL import Image
import io
import cairosvg

def read_svg_image_by_url(url):
    try:
        req = urllib.request.urlopen(url)
        svg_data = req.read()

        png_data = cairosvg.svg2png(bytestring=svg_data)

        img = Image.open(io.BytesIO(png_data))
        img = cv.cvtColor(np.array(img), cv.COLOR_RGB2BGR)
        return img

    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–±–æ –æ–±—Ä–æ–±—Ü—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {e}")
        return None

url = 'https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg'

img = read_svg_image_by_url(url)

if img is not None:
    cv_imshow(img)
else:
    print("–ù–µ–º–æ–∂–ª–∏–≤–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")

angle = 30

def rotate_image(image, angle_degrees, scale_x, scale_y):
    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—ñ–≤ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    height, width = image.shape[:2]

    # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫—É—Ç–∞ –Ω–∞ —Ä–∞–¥—ñ–∞–Ω–∏
    angle_radians = np.deg2rad(angle_degrees)

    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Ç—Ä–∏—Ü—ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç—É —Ç–∞ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
    rotation_matrix = cv.getRotationMatrix2D((width / 2, height / 2), angle_degrees, 1)
    scaling_matrix = np.array([[scale_x, 0, 0], [0, scale_y, 0], [0, 0, 1]], dtype=np.float32)

    # –ü–æ–≤–æ—Ä–æ—Ç —Ç–∞ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    rotated_scaled_image = cv.warpAffine(image, rotation_matrix.dot(scaling_matrix), (width, height))

    return rotated_scaled_image


# –ü–æ–≤–æ—Ä–æ—Ç –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
rotated_scaled_img = rotate_image(img, angle_degrees=30, scale_x=0.5, scale_y=0.33)

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ —Ç–∞ –ø—ñ—Å–ª—è –ø–æ–≤–æ—Ä–æ—Ç—É
cv_imshow(rotated_scaled_img)

pip install numpy

!pip install cairosvg